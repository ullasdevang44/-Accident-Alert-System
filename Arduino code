#include <TinyGPS++.h>
#include <SoftwareSerial.h>

// Define pins
#define VIBRATION_SENSOR_PIN 7
#define GPS_RX_PIN 4
#define GPS_TX_PIN 3

// GSM module (adjust RX/TX pins if needed)
#define GSM_RX_PIN 10
#define GSM_TX_PIN 11

// Initialize objects
TinyGPSPlus gps;
SoftwareSerial gpsSerial(GPS_RX_PIN, GPS_TX_PIN);
SoftwareSerial gsmSerial(GSM_RX_PIN, GSM_TX_PIN);

bool accidentDetected = false;

void setup() {
  Serial.begin(9600);
  gpsSerial.begin(9600);
  gsmSerial.begin(9600);

  pinMode(VIBRATION_SENSOR_PIN, INPUT);
  Serial.println("System Initialized");
}

void loop() {
  // Check for vibration sensor input
  int vibrationValue = digitalRead(VIBRATION_SENSOR_PIN);
  if (vibrationValue == HIGH) {
    Serial.println("Accident detected!");
    accidentDetected = true;
  }

  // Process GPS data
  while (gpsSerial.available() > 0) {
    char c = gpsSerial.read();
    gps.encode(c);
  }

  // Send SMS alert if accident is detected
  if (accidentDetected && gps.location.isValid()) {
    String message = "Accident Alert! Location: ";
    message += "https://www.google.com/maps/search/?api=1&query=";
    message += String(gps.location.lat(), 6) + "," + String(gps.location.lng(), 6);

    sendSMS(message);
    Serial.println("SMS Sent: " + message);
    accidentDetected = false;
  }

  delay(1000);  // Adjust delay as needed
}

void sendSMS(String message) {
  gsmSerial.println("AT"); // Check GSM module connection
  delay(100);
  gsmSerial.println("AT+CMGF=1"); // Set SMS to text mode
  delay(100);
  gsmSerial.println("AT+CMGS=\"+1234567890\""); // Replace with emergency contact number
  delay(100);
  gsmSerial.println(message); // SMS content
  delay(100);
  gsmSerial.write(26); // ASCII code for CTRL+Z to send SMS
  delay(5000);
}
